{"ast":null,"code":"var _jsxFileName = \"/home/rajat/Documents/blockchain/my/pet-shop/client/src/Election.jsx\";\nimport React from 'react';\n\nconst Election = props => {\n  let ElectionStatus = \"---------\";\n  let stfl = true,\n      endfl = false;\n\n  if (props.startStatus === true && props.endStatus === false) {\n    ElectionStatus = React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, \"\\\"Election has been Started!\\\"\");\n    stfl = false;\n    endfl = true;\n  } else if (props.startStatus === false && props.endStatus === true) {\n    ElectionStatus = React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, \"\\\"Election has been ended!\\\"\");\n    endfl = false;\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, ElectionStatus), React.createElement(\"div\", {\n    style: {\n      background: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, ElectionStatus), React.createElement(\"button\", {\n    onClick: props.onEleClick,\n    name: \"startElection\",\n    disabled: stfl == true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Start Election\"), React.createElement(\"button\", {\n    onClick: props.onEleClick,\n    name: \"endElection\",\n    disabled: endfl === false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"End Election\"), console.log(stfl + \" \" + endfl));\n};\n\nexport default Election;","map":{"version":3,"sources":["/home/rajat/Documents/blockchain/my/pet-shop/client/src/Election.jsx"],"names":["React","Election","props","ElectionStatus","stfl","endfl","startStatus","endStatus","background","onEleClick","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAGC,KAAD,IAAS;AACrB,MAAIC,cAAc,GAAC,WAAnB;AACA,MAAIC,IAAI,GAAC,IAAT;AAAA,MAAcC,KAAK,GAAC,KAApB;;AACA,MAAIH,KAAK,CAACI,WAAN,KAAsB,IAAtB,IAA8BJ,KAAK,CAACK,SAAN,KAAoB,KAAtD,EAA6D;AAC3DJ,IAAAA,cAAc,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAAjB;AACAC,IAAAA,IAAI,GAAC,KAAL;AAAWC,IAAAA,KAAK,GAAC,IAAN;AACZ,GAHD,MAGO,IAAIH,KAAK,CAACI,WAAN,KAAsB,KAAtB,IAA+BJ,KAAK,CAACK,SAAN,KAAoB,IAAvD,EAA6D;AAClEJ,IAAAA,cAAc,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAjB;AACAE,IAAAA,KAAK,GAAC,KAAN;AACD;;AACD,SAAQ,0CACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMF,cAAN,CADQ,EAER;AAAK,IAAA,KAAK,EAAE;AAAEK,MAAAA,UAAU,EAAE;AAAd,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCL,cAApC,CAFQ,EAGN;AAAQ,IAAA,OAAO,EAAED,KAAK,CAACO,UAAvB;AAAmC,IAAA,IAAI,EAAC,eAAxC;AAAwD,IAAA,QAAQ,EAAEL,IAAI,IAAE,IAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHM,EAMN;AAAQ,IAAA,OAAO,EAAEF,KAAK,CAACO,UAAvB;AAAmC,IAAA,IAAI,EAAC,aAAxC;AAAsD,IAAA,QAAQ,EAAEJ,KAAK,KAAG,KAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANM,EASLK,OAAO,CAACC,GAAR,CAAYP,IAAI,GAAG,GAAP,GAAaC,KAAzB,CATK,CAAR;AAcH,CAxBD;;AAyBA,eAAeJ,QAAf","sourcesContent":["import React from 'react';\n\nconst Election= (props)=>{\n    let ElectionStatus=\"---------\";\n    let stfl=true,endfl=false;\n    if (props.startStatus === true && props.endStatus === false) {\n      ElectionStatus = <h1>\"Election has been Started!\"</h1>;\n      stfl=false;endfl=true;\n    } else if (props.startStatus === false && props.endStatus === true) {\n      ElectionStatus = <h1>\"Election has been ended!\"</h1>;\n      endfl=false;\n    }\n    return (<>\n    <div>{ElectionStatus}</div>\n    <div style={{ background: \"red\" }}>{ElectionStatus}</div>\n      <button onClick={props.onEleClick} name=\"startElection\" disabled={stfl==true}>\n        Start Election\n      </button>\n      <button onClick={props.onEleClick} name=\"endElection\" disabled={endfl===false}>\n        End Election\n      </button>\n      {console.log(stfl + \" \" + endfl)}\n    \n    </>);\n\n\n}\nexport default Election;"]},"metadata":{},"sourceType":"module"}